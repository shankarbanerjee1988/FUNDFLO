service: ff-public-file-upload-service1

provider:
  name: aws
  runtime: nodejs20.x
  stage: prod
  region: ap-south-1
  memorySize: 256
  timeout: 300
  environment:
    BUCKET_NAME: ff-public-file-upload-service1-ap-south-1
    AUTH_SERVICE_URL: "https://ac-apis-dev.uat.fundflo.ai/v1/authentication"
    ALLOWED_MIME_TYPES: image/jpeg,image/png,text/jpg,application/pdf,text/plain
    MAX_FILE_SIZE: 10
    MAX_FILES: 10
    PRESIGNED_EXPIRY: 172800  # 2 days (48 hours)

  # IAM Permissions
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
        - "s3:ListBucket"
      Resource:
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}

functions:
  uploadFiles:
    handler: handler.uploadFilesHandler
    events:
      - http:
          path: upload
          method: post
          cors: true
          binaryMediaTypes:
            - "*/*"
          request:
            parameters:
              headers:
                Content-Type: true
  # readFiles:
  #   handler: handler.readFilesHandler
  #   events:
  #     - http:
  #         path: read
  #         method: get
  #         cors: true

resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        OwnershipControls:
          Rules:
            - ObjectOwnership: BucketOwnerEnforced
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          IgnorePublicAcls: true
          BlockPublicPolicy: false
          RestrictPublicBuckets: false

    MyS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:provider.environment.BUCKET_NAME}
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: "arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*"
              Condition:
                IpAddress:
                  "aws:SourceIp": 
                    - "13.232.13.120"   # ✅ Replace with allowed IP range 1
                    #- "0.0.0.0/32" # ✅ Replace with allowed IP 2
                StringLike:
                  "aws:Referer":
                    - "https://ar.dev.fundflo.ai*"           # ✅ Allowed subdomain
                    - "https://ar.qa.fundflo.ai*"  # ✅ Allowed domain 2
                    - "https://ar.demo.fundflo.ai*"           # ✅ Allowed subdomain
                    - "https://ar.fundflo.ai*"   # ✅ Allowed domain 1

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3110
    lambdaPort: 3111