service: fundflo-pdf-generator

frameworkVersion: '4'

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  timeout: 60
  memorySize: 2048
  logRetentionInDays: 30
  
  # Enable X-Ray tracing
  tracing:
    apiGateway: true
    lambda: true
    
  apiGateway:
    minimumCompressionSize: 1024
    # Configure binary media types to support PDF
    binaryMediaTypes:
      - 'application/pdf'
      - '*/*'
    # Global CORS configuration for API Gateway
    cors:
      allowOrigin: '*'
      allowHeaders:
        - Content-Type
        - X-Amz-Date
        - Authorization
        - X-Api-Key
        - X-Amz-Security-Token
        - Access-Control-Allow-Origin
        - Access-Control-Allow-Credentials
      allowMethods:
        - OPTIONS
        - POST
        - GET
      allowCredentials: false
      maxAge: 3600
    
  environment:
    BUCKET_NAME: fundflo-pdf-generator-bucket-${sls:stage}-${aws:region}
    NODE_OPTIONS: '--max-old-space-size=2048 --expose-gc'
    AUTH_SERVICE_URL: "https://ar-apis.uat.fundflo.ai/v1/admin/auth/stats"
    STAGE: ${sls:stage}
    # Set static log level
    LOG_LEVEL: 'debug' # Set to debug for more verbose logs
    # Multiple possible paths for Chromium to increase reliability
    # Multiple possible paths to try for Chromium executable
    PUPPETEER_EXECUTABLE_PATH: "/opt/bin/chromium"
    CHROMIUM_PATH: "/opt/bin/chromium"
    CHROME_AWS_LAMBDA_EXECUTABLE_PATH: "/opt/bin/chromium"
    # Disable sandbox for Lambda environment
    PUPPETEER_NO_SANDBOX: "true"
    
  # IAM role statements for the Lambda function
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
      Resource:
        - arn:aws:s3:::${self:provider.environment.BUCKET_NAME}/*
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
        - logs:DescribeLogGroups
      Resource: "arn:aws:logs:*:*:*"
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"
    # Add permissions to download files to /tmp
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"

functions:
  generatePdf:
    handler: handler.generatePdf
    description: "Generates PDF documents using headless Chrome"
    events:
      - http:
          path: generate-pdf
          method: post
          cors: true
          # Explicitly set integration type to AWS_PROXY for Lambda proxy integration
          integration: aws_proxy
    # Configure function-specific logs
    tags:
      Service: PDFGenerator
      Environment: ${sls:stage}
    # IMPORTANT: Use a well-maintained Chromium AWS Lambda layer
    layers:
      # - arn:aws:lambda:ap-south-1:580247275435:layer:LambdaChromiumLayer:2
      # Backup layer option if the above doesn't work
      - arn:aws:lambda:ap-south-1:764866452798:layer:chrome-aws-lambda:31
    runtime: nodejs20.x
    architecture: x86_64
    # Increase memory for better performance with Chromium
    memorySize: 2048
    # Increase timeout for PDF generation
    timeout: 60

  # Add OPTIONS handler for CORS preflight requests
  corsHandler:
    handler: handler.corsHandler
    description: "Handles CORS preflight OPTIONS requests"
    events:
      - http:
          path: generate-pdf
          method: options
          cors: true

# Built-in esbuild configuration (new in Serverless Framework v4)
build:
  # Enable esbuild to bundle dependencies properly
  esbuild: true
  packager: npm
  bundle: true
  minify: false
  sourceMap: true
  excludeFiles: 
    - "./**/*.test.js"
    - "test/**"
    - "tests/**"
    - "./**/__tests__/**"

plugins:
  - serverless-plugin-warmup
  - serverless-offline
  # - serverless-domain-manager  # Temporarily commented out

# Dependency bundling and optimization
custom:
  # Configure Lambda warm-up
  warmup:
    default:
      enabled: true
      prewarm: true
      cronExpression: '*/5 * * * ? *'
      concurrency: 3
      memorySize: 128
      timeout: 10
      payload:
        source: 'serverless-warmup'
      logRetentionInDays: 30  # Add this line to ensure log group creation
  
  # Custom domain configuration - temporarily disabled
  # customDomain:
  #   domainName: service.fundflo.ai
  #   basePath: ''
  #   stage: ${sls:stage}
  #   createRoute53Record: true
  #   certificateName: '*.fundflo.ai'
  #   endpointType: 'regional'
  #   securityPolicy: tls_1_2
  #   apiType: rest

resources:
  Resources:
    # PDF Storage S3 Bucket
    PdfBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        LifecycleConfiguration:
          Rules:
            - Id: ExpireOldFiles
              Status: Enabled
              ExpirationInDays: 30
        CorsConfiguration:
          CorsRules:
            - AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - POST
                - HEAD
              MaxAge: 3600
              
    # S3 Bucket Policy - Only allow HTTPS access
    PdfBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref PdfBucket
        PolicyDocument:
          Statement:
            - Effect: Deny
              Principal: '*'
              Action: 's3:*'
              Resource:
                - !GetAtt PdfBucket.Arn
                - !Join ['', [!GetAtt PdfBucket.Arn, '/*']]
              Condition:
                Bool:
                  'aws:SecureTransport': false
                
    # Log Group for Lambda Function
    GeneratePdfLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${sls:stage}-generatePdf
        RetentionInDays: 30
     # Add this new log group
    CorsHandlerLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${sls:stage}-corsHandler
        RetentionInDays: 30
        
    # Add this for the WarmUp plugin
    WarmUpPluginDefaultLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${sls:stage}-warmup-plugin
        RetentionInDays: 30       
    
    # Custom API Gateway Response for CORS
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Access-Control-Allow-Origin'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,Access-Control-Allow-Origin'"
          gatewayresponse.header.Access-Control-Allow-Methods: "'GET,POST,OPTIONS'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
  
  # CloudFormation Outputs
  Outputs:
    PdfBucketName:
      Description: "Name of the S3 bucket for PDF storage"
      Value: !Ref PdfBucket
    ApiEndpoint:
      Description: "API Gateway endpoint URL for the PDF generation service"
      Value: 
        Fn::Join:
          - ""
          - - "https://"
            - !Ref ApiGatewayRestApi
            - ".execute-api.${self:provider.region}.amazonaws.com/${sls:stage}"
    # Commenting out custom domain endpoint output
    # CustomDomainEndpoint:
    #   Description: "Custom domain URL for the PDF generation service"
    #   Value: 
    #     Fn::Join:
    #       - ""
    #       - - "https://"
    #         - "service.fundflo.ai/"