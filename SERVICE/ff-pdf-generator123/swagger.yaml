openapi: 3.0.0
info:
  title: PDF Generator API
  description: API for generating PDF documents from Handlebars templates and data
  version: 1.0.0
  contact:
    name: Fundflo Technologies
    email: support@fundflo.com
  license:
    name: Proprietary
servers:
  - url: https://api.example.com/dev
    description: Development server
  - url: https://api.example.com/prod
    description: Production server
paths:
  /generate-pdf:
    post:
      summary: Generate PDF (Standard Tier)
      description: Generate a PDF document using standard resources (2048MB memory, 60s timeout)
      operationId: generatePdf
      tags:
        - PDF Generation
      parameters:
        - in: query
          name: output
          description: Output format for the PDF
          schema:
            type: string
            enum: [url, base64]
            default: url
          required: false
        - in: query
          name: debug
          description: Enable debug mode
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PdfGenerationRequest'
            examples:
              basicPdf:
                summary: Basic PDF Example
                value:
                  templateContent: "<html><head><style>body { font-family: Arial, sans-serif; }</style></head><body><h1>{{title}}</h1><p>{{content}}</p></body></html>"
                  data:
                    title: Sample PDF Report
                    content: This is a sample PDF generated from a template. It demonstrates the basic functionality of the PDF Generator service.
                  title: Sample Report
                  showPageNumbers: true
                  copyright: © 2025 Your Company
                  customFooter: CONFIDENTIAL
      responses:
        '200':
          description: PDF generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfGenerationUrlResponse'
              example:
                message: PDF generated and uploaded successfully
                url: https://your-s3-bucket.s3.amazonaws.com/pdfs/2025-05-12/1683892749382-a1b2c3d4.pdf
                performance:
                  parseTime: 5
                  renderTime: 120
                  pdfGenerationTime: 1500
                  uploadTime: 350
                  totalTime: 1975
                  complexity: standard
            application/pdf:
              schema:
                type: string
                format: binary
              example: (binary PDF data)
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: Missing templateContent
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error: Failed to generate PDF
                message: Error generating PDF with puppeteer
                performance:
                  parseTime: 5
                  renderTime: 120
                  totalTime: 125
                  complexity: standard

  /generate-pdf-complex:
    post:
      summary: Generate Complex PDF (High Memory Tier)
      description: Generate a complex PDF document using high memory resources (4096MB memory, 120s timeout)
      operationId: generateComplexPdf
      tags:
        - PDF Generation
      parameters:
        - in: query
          name: output
          description: Output format for the PDF
          schema:
            type: string
            enum: [url, base64]
            default: url
          required: false
        - in: query
          name: debug
          description: Enable debug mode
          schema:
            type: boolean
            default: false
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PdfGenerationRequest'
            examples:
              complexPdf:
                summary: Complex PDF with Tables and Images
                value:
                  templateContent: "<html><head><style>body { font-family: Arial, sans-serif; } table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; } th { background-color: #f2f2f2; }</style></head><body><h1>{{title}}</h1><p>{{introduction}}</p><h2>Data Table</h2><table><thead><tr><th>Item</th><th>Quantity</th><th>Price</th><th>Total</th></tr></thead><tbody>{{#each items}}<tr><td>{{name}}</td><td>{{quantity}}</td><td>{{formatCurrency price}}</td><td>{{formatCurrency (multiply quantity price)}}</td></tr>{{/each}}</tbody></table><h2>Summary</h2><p>Total Items: {{items.length}}</p><p>Total Amount: {{formatCurrency totalAmount}}</p><p>Generated on: {{formatDate generatedDate}}</p><img src=\"{{logoUrl}}\" style=\"max-width: 200px; margin-top: 30px;\" /></body></html>"
                  data:
                    title: Invoice #INV-2025-001
                    introduction: This invoice is generated for the services rendered in May 2025.
                    items:
                      - name: Web Development
                        quantity: 10
                        price: 100
                      - name: UI/UX Design
                        quantity: 5
                        price: 150
                      - name: Content Creation
                        quantity: 3
                        price: 80
                    totalAmount: 1740
                    generatedDate: 2025-05-15T12:30:00Z
                    logoUrl: https://via.placeholder.com/200x100.png?text=Company+Logo
                  title: Invoice
                  format: A4
                  landscape: false
                  margin:
                    top: 100px
                    right: 20px
                    bottom: 80px
                    left: 20px
      responses:
        '200':
          description: PDF generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfGenerationUrlResponse'
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

  /generate-pdf-large:
    post:
      summary: Generate Large PDF (Long Running Tier)
      description: Generate a large PDF document using extended resources (3008MB memory, 300s timeout)
      operationId: generateLargePdf
      tags:
        - PDF Generation
      parameters:
        - in: query
          name: output
          description: Output format for the PDF
          schema:
            type: string
            enum: [url, base64]
            default: url
        - in: query
          name: debug
          description: Enable debug mode
          schema:
            type: boolean
            default: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PdfGenerationRequest'
            examples:
              largePdf:
                summary: Large Multi-Page PDF
                value:
                  templateContent: "<html><head><style>body { font-family: Arial, sans-serif; } .page-break { page-break-after: always; }</style></head><body><h1>{{title}}</h1>{{#each chapters}}<h2>Chapter {{number}}: {{title}}</h2><p>{{content}}</p><div class=\"page-break\"></div>{{/each}}<h2>Appendix</h2><p>This document was generated using the PDF Generator service.</p></body></html>"
                  data:
                    title: Comprehensive Guide to PDF Generation
                    chapters:
                      - number: 1
                        title: Introduction
                        content: PDF (Portable Document Format) is a file format developed by Adobe in the 1990s to present documents, including text formatting and images, in a manner independent of application software, hardware, and operating systems.
                      - number: 2
                        title: History of PDF
                        content: The PDF specification was first published in 1993. The format was not an open standard until 2008, when it was published by the International Organization for Standardization as ISO 32000-1:2008.
                      - number: 3
                        title: PDF Structure
                        content: A PDF file consists of a header, body, cross-reference table, and trailer. The body contains objects that make up the document's contents, including fonts, images, and the document's text.
                      - number: 4
                        title: Creating PDFs Programmatically
                        content: There are many libraries and tools available for creating PDFs programmatically in various programming languages. Some popular ones include PDFKit, jsPDF, wkhtmltopdf, and many others.
                      - number: 5
                        title: PDF in Web Applications
                        content: PDFs are commonly used in web applications for generating reports, invoices, tickets, and other documents that need to maintain a consistent appearance across different platforms and devices.
                  title: PDF Generation Guide
                  showPageNumbers: true
                  copyright: © 2025 PDF Technology Foundation
                  customFooter: FOR INTERNAL USE ONLY
      responses:
        '200':
          description: PDF generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PdfGenerationUrlResponse'
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

  /queue-pdf:
    post:
      summary: Queue PDF Generation (Asynchronous)
      description: Queue a PDF generation request for asynchronous processing
      operationId: queuePdfGeneration
      tags:
        - Asynchronous Processing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueuedPdfRequest'
            examples:
              queuedPdf:
                summary: Asynchronous PDF Generation
                value:
                  templateContent: "<html><head><style>body { font-family: Arial, sans-serif; font-size: 12px; }</style></head><body><h1>{{reportTitle}}</h1><p>This report contains a large amount of data and is generated asynchronously.</p>{{#each sections}}<h2>{{title}}</h2><p>{{content}}</p>{{/each}}</body></html>"
                  data:
                    reportTitle: Quarterly Financial Report
                    sections:
                      - title: Executive Summary
                        content: Financial performance for Q1 2025 was strong with revenue up 15% YoY.
                      - title: Revenue Analysis
                        content: Product A revenue increased by 20%, while Product B saw a 10% increase.
                      - title: Expense Overview
                        content: Operating expenses were reduced by 5% due to automation initiatives.
                      - title: Future Outlook
                        content: We expect continued growth in Q2 with new product launches planned.
                  title: Q1 2025 Financial Report
                  showPageNumbers: true
                  callbackUrl: https://your-webhook-endpoint.com/pdf-notifications
      responses:
        '202':
          description: PDF generation request queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueResponse'
              example:
                message: PDF generation request queued successfully
                requestId: pdf-1683892749382-a1b2c3d4
                status: queued
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    PdfGenerationRequest:
      type: object
      required:
        - templateContent
      properties:
        templateContent:
          type: string
          description: Handlebars template content for the PDF
        data:
          type: object
          description: Data to be used in the template
        title:
          type: string
          description: Document title shown in the header
          default: PDF
        showPageNumbers:
          type: boolean
          description: Whether to show page numbers
          default: true
        copyright:
          type: string
          description: Copyright text for the footer
          default: © Powered by Fundflo Technologies
        customFooter:
          type: string
          description: Custom text for the footer center
        format:
          type: string
          description: Page format (A4, Letter, etc.)
          enum: [A4, Letter, Legal, Tabloid, Ledger, A0, A1, A2, A3, A5, A6]
          default: A4
        landscape:
          type: boolean
          description: Landscape orientation
          default: false
        margin:
          type: object
          description: Page margins
          properties:
            top:
              type: string
              default: 100px
            right:
              type: string
              default: 20px
            bottom:
              type: string
              default: 80px
            left:
              type: string
              default: 20px

    QueuedPdfRequest:
      type: object
      required:
        - templateContent
      properties:
        templateContent:
          type: string
          description: Handlebars template content for the PDF
        data:
          type: object
          description: Data to be used in the template
        title:
          type: string
          description: Document title shown in the header
        showPageNumbers:
          type: boolean
          description: Whether to show page numbers
          default: true
        copyright:
          type: string
          description: Copyright text for the footer
        customFooter:
          type: string
          description: Custom text for the footer center
        format:
          type: string
          description: Page format (A4, Letter, etc.)
          default: A4
        landscape:
          type: boolean
          description: Landscape orientation
          default: false
        callbackUrl:
          type: string
          format: uri
          description: URL to receive notification when PDF generation is complete

    PdfGenerationUrlResponse:
      type: object
      properties:
        message:
          type: string
          example: PDF generated and uploaded successfully
        url:
          type: string
          format: uri
          example: https://your-s3-bucket.s3.amazonaws.com/pdfs/2025-05-12/1683892749382-a1b2c3d4.pdf
        performance:
          type: object
          properties:
            parseTime:
              type: integer
              description: Time taken to parse the request (ms)
            renderTime:
              type: integer
              description: Time taken to render the HTML template (ms)
            pdfGenerationTime:
              type: integer
              description: Time taken to generate the PDF (ms)
            uploadTime:
              type: integer
              description: Time taken to upload the PDF to S3 (ms)
            totalTime:
              type: integer
              description: Total processing time (ms)
            complexity:
              type: string
              enum: [standard, complex, large]
              description: Estimated complexity of the PDF

    QueueResponse:
      type: object
      properties:
        message:
          type: string
          example: PDF generation request queued successfully
        requestId:
          type: string
          example: pdf-1683892749382-a1b2c3d4
        status:
          type: string
          enum: [queued]
          default: queued

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        message:
          type: string
          description: Detailed error message
        performance:
          type: object
          description: Performance metrics (if available)

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Missing templateContent

    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: Failed to generate PDF
            message: Error generating PDF with puppeteer

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
      description: API key for authentication

security:
  - ApiKeyAuth: []

tags:
  - name: PDF Generation
    description: Endpoints for generating PDF documents
  - name: Asynchronous Processing
    description: Endpoints for asynchronous PDF generation